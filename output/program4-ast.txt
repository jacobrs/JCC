  prog
    classDeclWrapper
      classDecl
        class
        IDCompilerStarter
        optionalIDExt
          EPSILON
        {
        genericDeclWrapper
          genericDecl
            type
              float
            IDloadTimes
            genericExtension
              arraySizeWrapper
                arraySize
                  [
                  INTEGER3
                  ]
                arraySizeWrapper
                  arraySize
                    [
                    INTEGER4
                    ]
                  arraySizeWrapper
                    EPSILON
            ;
          genericDeclWrapper
            EPSILON
        }
        ;
      classDeclWrapper
        classDecl
          class
          IDCompilerPackage
          optionalIDExt
            :
            IDCompilerStarter
            idWrapper
              EPSILON
          {
          genericDeclWrapper
            genericDecl
              type
                float
              IDcomputationTime
              genericExtension
                arraySizeWrapper
                  EPSILON
              ;
            genericDeclWrapper
              genericDecl
                type
                  float
                IDloadTime
                genericExtension
                  arraySizeWrapper
                    EPSILON
                ;
              genericDeclWrapper
                EPSILON
          }
          ;
        classDeclWrapper
          classDecl
            class
            IDCompiler
            optionalIDExt
              :
              IDCompilerPackage
              idWrapper
                EPSILON
            {
            genericDeclWrapper
              genericDecl
                type
                  float
                IDtested
                genericExtension
                  arraySizeWrapper
                    EPSILON
                ;
              genericDeclWrapper
                genericDecl
                  type
                    integer
                  IDtest
                  genericExtension
                    (
                    fParams
                      EPSILON
                    )
                  ;
                genericDeclWrapper
                  EPSILON
            }
            ;
          classDeclWrapper
            EPSILON
    funcDefWrapper
      funcDef
        funcHead
          type
            float
          optionalIDSR
            IDCompiler
            optionalIDSRExt
              ::
              IDtest
          (
          fParams
            type
              float
            IDt
            arraySizeWrapper
              EPSILON
            fParamsTailWrapper
              EPSILON
          )
        funcBody
          {
          statementWrapper
            statement
              assignStatAndVar
                IDtested
                statOrVarExt
                  EPSILON
                optionalAssignOp
                  assignOp
                    =
                  expr
                    arithExpr
                      term
                        factor
                          variableAndFunctionCall
                            IDt
                            T3
                              EPSILON
                            T2
                              EPSILON
                        termPrime
                          EPSILON
                      arithExprPrime
                        EPSILON
                    exprExt
                      EPSILON
                  ;
            statementWrapper
              statement
                return
                (
                expr
                  arithExpr
                    term
                      factor
                        FLOAT12.2
                      termPrime
                        EPSILON
                    arithExprPrime
                      EPSILON
                  exprExt
                    EPSILON
                )
                ;
              statementWrapper
                EPSILON
          }
        ;
      funcDefWrapper
        EPSILON
    main
    funcBody
      {
      statementWrapper
        statement
          assignStatAndVar
            IDCompiler
            statOrVarExt
              IDcomp
              genericExtension
                arraySizeWrapper
                  EPSILON
            optionalAssignOp
              ;
        statementWrapper
          statement
            assignStatAndVar
              integer
              IDresults
              genericExtension
                arraySizeWrapper
                  arraySize
                    [
                    INTEGER10
                    ]
                  arraySizeWrapper
                    arraySize
                      [
                      INTEGER10
                      ]
                    arraySizeWrapper
                      EPSILON
              optionalAssignOp
                ;
          statementWrapper
            statement
              assignStatAndVar
                integer
                IDtest
                genericExtension
                  arraySizeWrapper
                    EPSILON
                optionalAssignOp
                  assignOp
                    =
                  expr
                    arithExpr
                      term
                        factor
                          INTEGER10
                        termPrime
                          EPSILON
                      arithExprPrime
                        EPSILON
                    exprExt
                      EPSILON
                  ;
            statementWrapper
              statement
                assignStatAndVar
                  integer
                  IDtest2
                  genericExtension
                    arraySizeWrapper
                      EPSILON
                  optionalAssignOp
                    assignOp
                      =
                    expr
                      arithExpr
                        term
                          factor
                            INTEGER33
                          termPrime
                            EPSILON
                        arithExprPrime
                          EPSILON
                      exprExt
                        EPSILON
                    ;
              statementWrapper
                statement
                  assignStatAndVar
                    IDtest
                    statOrVarExt
                      EPSILON
                    optionalAssignOp
                      assignOp
                        =
                      expr
                        arithExpr
                          term
                            factor
                              INTEGER12
                            termPrime
                              EPSILON
                          arithExprPrime
                            EPSILON
                        exprExt
                          EPSILON
                      ;
                statementWrapper
                  statement
                    write
                    (
                    expr
                      arithExpr
                        term
                          factor
                            variableAndFunctionCall
                              IDtest2
                              T3
                                EPSILON
                              T2
                                EPSILON
                          termPrime
                            EPSILON
                        arithExprPrime
                          EPSILON
                      exprExt
                        EPSILON
                    )
                    ;
                  statementWrapper
                    statement
                      write
                      (
                      expr
                        arithExpr
                          term
                            factor
                              INTEGER23413
                            termPrime
                              EPSILON
                          arithExprPrime
                            EPSILON
                        exprExt
                          EPSILON
                      )
                      ;
                    statementWrapper
                      EPSILON
      }
    ;
    
