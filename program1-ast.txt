  prog
    classDeclWrapper
      classDecl
        class
        IDENTIFIERCompilerStarter
        optionalIDExt
          EPSILON
        {
        genericDeclWrapper
          genericDecl
            type
              float
            IDENTIFIERloadTime
            genericExtension
              arraySizeWrapper
                EPSILON
            ;
          genericDeclWrapper
            EPSILON
        }
        ;
      classDeclWrapper
        classDecl
          class
          IDENTIFIERCompilerPackage
          optionalIDExt
            :
            IDENTIFIERCompilerStarter
            idWrapper
              EPSILON
          {
          genericDeclWrapper
            genericDecl
              type
                float
              IDENTIFIERcomputationTime
              genericExtension
                arraySizeWrapper
                  EPSILON
              ;
            genericDeclWrapper
              EPSILON
          }
          ;
        classDeclWrapper
          classDecl
            class
            IDENTIFIERCompiler
            optionalIDExt
              :
              IDENTIFIERCompilerPackage
              idWrapper
                EPSILON
            {
            genericDeclWrapper
              genericDecl
                type
                  integer
                IDENTIFIERtested
                genericExtension
                  arraySizeWrapper
                    EPSILON
                ;
              genericDeclWrapper
                genericDecl
                  type
                    integer
                  IDENTIFIERtest
                  genericExtension
                    (
                    fParams
                      EPSILON
                    )
                  ;
                genericDeclWrapper
                  EPSILON
            }
            ;
          classDeclWrapper
            EPSILON
    funcDefWrapper
      funcDef
        funcHead
          type
            integer
          optionalIDSR
            IDENTIFIERCompiler
            optionalIDSRExt
              ::
              IDENTIFIERtest
          (
          fParams
            type
              integer
            IDENTIFIERt
            arraySizeWrapper
              EPSILON
            fParamsTailWrapper
              EPSILON
          )
        funcBody
          {
          statementWrapper
            statement
              assignStatAndVar
                IDENTIFIERthis
                statOrVarExt
                  indiceWrapper
                    EPSILON
                  indiceExtInt
                    .
                    variableIdnestWrapper
                      variableIdnest
                        IDENTIFIERtested
                        indiceWrapper
                          EPSILON
                      variableIdnestWrapper
                        EPSILON
                optionalAssignOp
                  assignOp
                    =
                  expr
                    arithExpr
                      term
                        factor
                          variableAndFunctionCall
                            IDENTIFIERt
                            T3
                              EPSILON
                            T2
                              EPSILON
                        termPrime
                          EPSILON
                      arithExprPrime
                        EPSILON
                    exprExt
                      EPSILON
                  ;
            statementWrapper
              EPSILON
          }
        ;
      funcDefWrapper
        EPSILON
    main
    funcBody
      {
      statementWrapper
        statement
          assignStatAndVar
            IDENTIFIERCompiler
            statOrVarExt
              IDENTIFIERcomp
              genericExtension
                arraySizeWrapper
                  EPSILON
            optionalAssignOp
              ;
        statementWrapper
          statement
            assignStatAndVar
              integer
              IDENTIFIERresult
              genericExtension
                arraySizeWrapper
                  EPSILON
              optionalAssignOp
                assignOp
                  =
                expr
                  arithExpr
                    term
                      factor
                        variableAndFunctionCall
                          IDENTIFIERcomp
                          T3
                            .
                          T2
                            variableAndFunctionCall
                              IDENTIFIERtest
                              T3
                                EPSILON
                              T2
                                (
                                aParams
                                  expr
                                    arithExpr
                                      term
                                        factor
                                          INTEGER12
                                        termPrime
                                          EPSILON
                                      arithExprPrime
                                        EPSILON
                                    exprExt
                                      EPSILON
                                  aParamsTailWrapper
                                    EPSILON
                                )
                                T3
                                  EPSILON
                      termPrime
                        EPSILON
                    arithExprPrime
                      EPSILON
                  exprExt
                    EPSILON
                ;
          statementWrapper
            EPSILON
      }
    ;
    
