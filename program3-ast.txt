  prog
    classDeclWrapper
      classDecl
        class
        IDENTIFIERTest
        optionalIDExt
          EPSILON
        {
        genericDeclWrapper
          genericDecl
            type
              float
            IDENTIFIERwhatafloat
            genericExtension
              arraySizeWrapper
                EPSILON
            ;
          genericDeclWrapper
            genericDecl
              type
                integer
              IDENTIFIERthisisanarray
              genericExtension
                arraySizeWrapper
                  arraySize
                    [
                    INTEGER10
                    ]
                  arraySizeWrapper
                    EPSILON
              ;
            genericDeclWrapper
              genericDecl
                type
                  integer
                IDENTIFIERthisFunctionReturnsAnInteger
                genericExtension
                  (
                  fParams
                    type
                      integer
                    IDENTIFIERa
                    arraySizeWrapper
                      EPSILON
                    fParamsTailWrapper
                      fParamsTail
                        ,
                        type
                          float
                        IDENTIFIERb
                        arraySizeWrapper
                          EPSILON
                      fParamsTailWrapper
                        EPSILON
                  )
                ;
              genericDeclWrapper
                EPSILON
        }
        ;
      classDeclWrapper
        EPSILON
    funcDefWrapper
      funcDef
        funcHead
          type
            integer
          optionalIDSR
            IDENTIFIERTest
            optionalIDSRExt
              ::
              IDENTIFIERthisFunctionReturnsAnInteger
          (
          fParams
            type
              integer
            IDENTIFIERa
            arraySizeWrapper
              EPSILON
            fParamsTailWrapper
              fParamsTail
                ,
                type
                  float
                IDENTIFIERb
                arraySizeWrapper
                  EPSILON
              fParamsTailWrapper
                EPSILON
          )
        funcBody
          {
          statementWrapper
            statement
              write
              (
              expr
                arithExpr
                  term
                    factor
                      variableAndFunctionCall
                        IDENTIFIERa
                        T3
                          EPSILON
                        T2
                          EPSILON
                    termPrime
                      EPSILON
                  arithExprPrime
                    addOp
                      +
                    term
                      factor
                        variableAndFunctionCall
                          IDENTIFIERb
                          T3
                            EPSILON
                          T2
                            EPSILON
                      termPrime
                        EPSILON
                    arithExprPrime
                      EPSILON
                exprExt
                  EPSILON
              )
              ;
            statementWrapper
              EPSILON
          }
        ;
      funcDefWrapper
        EPSILON
    main
    funcBody
      {
      statementWrapper
        statement
          assignStatAndVar
            integer
            IDENTIFIERid
            genericExtension
              arraySizeWrapper
                EPSILON
            optionalAssignOp
              assignOp
                =
              expr
                arithExpr
                  term
                    factor
                      FLOAT1.23
                    termPrime
                      EPSILON
                  arithExprPrime
                    addOp
                      +
                    term
                      factor
                        (
                        arithExpr
                          term
                            factor
                              (
                              arithExpr
                                term
                                  factor
                                    FLOAT1.23
                                  termPrime
                                    multOp
                                      *
                                    factor
                                      FLOAT1.23
                                    termPrime
                                      EPSILON
                                arithExprPrime
                                  EPSILON
                              )
                            termPrime
                              EPSILON
                          arithExprPrime
                            addOp
                              -
                            term
                              factor
                                FLOAT1.23
                              termPrime
                                EPSILON
                            arithExprPrime
                              EPSILON
                        )
                      termPrime
                        EPSILON
                    arithExprPrime
                      addOp
                        +
                      term
                        factor
                          FLOAT1.23
                        termPrime
                          EPSILON
                      arithExprPrime
                        EPSILON
                exprExt
                  EPSILON
              ;
        statementWrapper
          EPSILON
      }
    ;
    
